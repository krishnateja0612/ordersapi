
1. Given a binary tree, print the elements in the anti-clockwise direction. (boundary elements in an anti-clockwise direction)
2. https://leetcode.com/problems/surrounded-regions/
---------------------------------------------------------------------------------------------------------------------
Both are problem solving and Data structure questions.
1. https://www.geeksforgeeks.org/algorithms-gq/pattern-searching/
2.https://leetcode.com/problems/valid-parentheses/
----------------------------------------------------------------------------------------------------------------------
2 Managers were there 1st round with one of the manager was on Coding side - 
2nd round with another manager was on Object oriented based designing coding question - 
Other questions were based on her projects and some behavioral questions. 
They also discussed about their own project and team and future plans as well.
----------------------------------------------------------------------------------------------------------------------------
these two coding question had to be completed in 30 mins during interview- they are focusing on speed:
1. https://www.geeksforgeeks.org/tree-isomorphism-problem/
2.https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/

3.https://leetcode.com/problems/house-robber/

===========================================================================================================================
https://leetcode.com/problems/maximum-width-of-binary-tree/
https://leetcode.com/problems/permutations/
https://leetcode.com/problems/compare-version-numbers/

=========================================================================================================
/*
Break a string into subsequences such that if 'a' is present in a subsequence, all occurrences of 'a' in the string must be in that subsequence.
Given an string, return a list of minimal subsequence lengths. For example:

"abcdacd" -> [7] because "abcdacd" are the subsequences.
"abcdefg" -> [1,1,1,1,1,1,1] because "a", "b","c","d","e,","f,"g" are the subsequences.
"abcaefg" -> [4,1,1,1] because "abca", "e,","f","g" are the subsequences.*/

class Solution {
public List<Integer> subsequence(String s) {


}

}
==================================================================
 
"Given array and target number check if sum of any number of element exist or not kind of coin change problem
And basic design of cart and checkout"

Java fundamentals
Design questions
Write an API using get post put method for a given program
Sql queries
Java programmings questions

1st round: a lot of questions on core java and multi threading area
2nd round: a lot if questions on spring and micro services   + my experience
			a- https://www.geeksforgeeks.org/rearrange-characters-string-no-two-adjacent/?ref=rp
3rd round: one algorithm and one sql questions
			a - https://www.geeksforgeeks.org/rearrange-positive-and-negative-numbers/
			b - SQL query ... using join/ subquery 

=================================================================================================
https://leetcode.com/problems/maximum-width-of-binary-tree/

https://leetcode.com/problems/permutations/ 
================================================================================================================================================
Object oriented design for design a video game a player go to some doors like red door -15% health, green door +5% 
Health need to provide oop conception
https://leetcode.com/problems/palindrome-linked-list/
Subset sum for target sum for example: 3 5 6 1 target = 12 get true
Because 1 + 6 + 5 = 12 follow up minus values like -7?
https://www.techiedelight.com/subset-sum-problem/

Multiple thread local thread
How to get thread
Volatile keyword
Restful api design.
Like get post delete basic web function
Get the adjust values sum equals to perfect square for example: 1 3 6 10 15....... output 15 length
1+3 is 4 perfect square and 3+6 is 9 and 6+10 is 16 and 10+15 is 25
=================================================================================================================================
1. Given an array and target number check if sum of any number of elements exist or not kind of coin change problem
2. Basic design of cart and checkout
=============================================================================================================================================
Java fundamentals
Design questions
Write an API using get post put method for a given program
Sql queries
Java programming questions
==================================================================================================================================
General questions on my resume
System Design : how to design a large e- commerce system with lot of updates and notification services
https://www.geeksforgeeks.org/rearrange-characters-string-no-two-adjacent/
https://www.geeksforgeeks.org/rearrange-positive-and-negative-numbers/
https://leetcode.com/problems/palindromic-substrings/
==============================================================================================================================
1st round: questions on core java and multi-threading area
2nd round: questions on spring and micro services + my experience
https://www.geeksforgeeks.org/rearrange-characters-string-no-two-adjacent/?ref=rp
3rd round: one algorithm and one sql questions
https://www.geeksforgeeks.org/rearrange-positive-and-negative-numbers/
SQL query ... using join/ subquery
==========================================================================================================================
1) Max sum sub array
2) return Max subsequence of integers
3) quick sort 
1.Return a sub array that has equal ones and zeros. 
2. Length of longest increasing subsequence.
3.Write a program that takes an array A and an index i into A, and rearranges the elements such that all elements less than A[i] (the “pivot”) appear first, followed by elements equal to the pivot, followed by elements greater than the pivot.
